export function registerBoilerplateBlocks(t,e,o){o.forEach(o=>{const c=Array.from(e),s=[];(o.addableBlockTypes.post||o.addableBlockTypes.common||[]).concat({typeId:o.typeId,panel:!1,shortcut:!1}).reverse().forEach(({typeId:t,panel:e,shortcut:o})=>{const l=c.indexOf(t);-1!==l&&(c.splice(l,1),e&&c.unshift(t),o&&s.unshift(t))}),t.registerBlockType(t.createBoilerplateBlock(Object.assign(o,{panelBlockTypes:c,shortcutBlockTypes:s})))})}const MTBlockEditor=window.MTBlockEditor,scriptElm=(()=>{const t=document.querySelector("script[data-block-types][data-blocks]");return t&&t.src.startsWith(import.meta.url)?t:null})(),blockTypes=scriptElm&&scriptElm.dataset.blockTypes,blocks=scriptElm&&scriptElm.dataset.blocks;MTBlockEditor&&blocks&&blockTypes&&registerBoilerplateBlocks(MTBlockEditor,JSON.parse(blockTypes),JSON.parse(blocks));
//# sourceMappingURL=register-boilerplate-blocks.js.map