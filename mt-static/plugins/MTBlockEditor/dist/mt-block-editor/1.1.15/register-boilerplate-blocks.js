export function registerBoilerplateBlocks(e,o,c){c.forEach(c=>{const s=Array.from(o),t=Array.from(o);(c.addableBlockTypes.post||[]).concat({typeId:c.typeId,panel:!1,shortcut:!1}).reverse().forEach(e=>{[{ids:s,key:"panel"},{ids:t,key:"shortcut"}].forEach(o=>{const c=o.ids.indexOf(e.typeId);if(-1===c)return;const s=o.ids.splice(c,1)[0];e[o.key]&&o.ids.splice(0,0,s)})}),e.registerBlockType(e.createBoilerplateBlock(Object.assign(c,{panelBlockTypes:s,shortcutBlockTypes:t})))})}const MTBlockEditor=window.MTBlockEditor,scriptElm=document.querySelector(`script[src^="${import.meta.url}"][data-block-types][data-blocks]`),blockTypes=scriptElm&&scriptElm.dataset.blockTypes,blocks=scriptElm&&scriptElm.dataset.blocks;MTBlockEditor&&blocks&&blockTypes&&registerBoilerplateBlocks(MTBlockEditor,JSON.parse(blockTypes),JSON.parse(blocks));
//# sourceMappingURL=register-boilerplate-blocks.js.map